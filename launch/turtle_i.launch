<?xml version="1.0"?>
<launch>
    <arg name="robot" default="robot_0" />
    <arg name="prefix" default="$(arg robot)_"/>
    <arg name="map" default="empty" />
	<arg name="initial_pose_x" default="0.0" />
    <arg name="initial_pose_y" default="0.0" />
    <arg name="initial_pose_a" default="0.0" />
    <arg name="base" value="$(optenv TURTLEBOT_BASE kobuki)" /> <!-- create, roomba -->
    <arg name="stacks" value="$(optenv TURTLEBOT_STACKS hexagons)" /> <!-- circles, hexagons -->
    <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR no3d)" /> <!-- kinect, asus_xtion_pro --> 
    <arg name="top_plate_device" value="$(optenv TURTLEBOT_TOP_PLATE_DEVICE rplidar)" doc="top plate devices types [rplidar, widowx, reactor_no_wrist, reactor_wrist, pincher, urg04lx, notop]" />
    <arg name="launch_amcl_and_mapserver" default="false"/>
	<arg name="launch_gmapping" default="false"/>
	<arg name="launch_move_base" default="false"/>
    
    <!-- robot i -->
    <group ns="$(arg robot)">
        
        <!-- launch platform specific nodes -->
        <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
            <arg name="base" value="$(arg base)" />
            <arg name="stacks" value="$(arg stacks)" />
            <arg name="3d_sensor" value="$(arg 3d_sensor)" />
            <arg name="top_plate_device" value="$(arg top_plate_device)" />
            <arg name="prefix_frame" value="$(arg robot)_" />
            <arg name="robot_initial_pose" value="-x $(arg initial_pose_x) -y $(arg initial_pose_y) -Y $(arg initial_pose_a)" />            
        </include>
        
        <!-- robot state publisher: publishes robot state to tf -->
        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
            <param name="publish_frequency" type="double" value="30.0" />
        </node>
                
          <!-- Elevator action -->
        <include file="$(find turtlebot_elevator)/launch/elevator_action.launch"/>
  
        <!-- Four Tag Laser Locator -->
        <include file="$(find cpswarm_bringup)/launch/four_tag_laser_locator.launch">
            <!--arg name="robot_base_frame" value="$(arg prefix)base_footprint"/>
            <arg name="sensor_frame" value="$(arg prefix)laser_base_link"/>
            <arg name="fixed_frame" value="$(arg prefix)odom"/>
            <arg name="min_num_cluster" value="2"/>
            <arg name="max_num_cluser" value="10"/>
            <arg name="cluster_tolerance" value="0.05"/>
            
            <arg name="tag_distance" value="0.6"/>
            <arg name="tag_distance_margin" value="0.20"/>
            
            <arg name="tag_distance" value="0.5"/>
            <arg name="tag_distance_margin" value="0.20"/-->    
        </include>
  
		<!-- TODO: SEPARATE AMCL, MAP SERVER AND MOVE_bASE -->
        <!-- Map Server, AMCL and Move Base  -->
        <include if="$(arg launch_amcl_and_mapserver)" file="$(find turtlebot_gazebo)/launch/amcl_demo_multi.launch">
            <arg name="prefix_frame" value="$(arg robot)_" />
            <arg name="map_file" value="$(find cpswarm_bringup)/maps/$(arg map).yaml" />
            <arg name="initial_pose_x" value="$(arg initial_pose_x)" />
            <arg name="initial_pose_y" value="$(arg initial_pose_y)" />
            <arg name="initial_pose_a" value="$(arg initial_pose_a)" />
            
        </include>
        
        <include if="$(arg launch_gmapping)" file="$(find cpswarm_bringup)/launch/mapping.launch">
			<arg name="prefix" value="$(arg prefix)"/>
		</include>
        
        <!--tf static to map to see all robots in rviz-->
        <node pkg="tf" type="static_transform_publisher" name="tf_robot_map_to_map" args="0 0 0 0 0 0 /map /$(arg prefix)map 100"/>
        
    </group>
</launch>

